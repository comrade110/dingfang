/*
 SDZUserService.m
 The implementation classes and methods for the UserService web service.
 Generated by SudzC.com
 */

#import "SDZUserService.h"

#import "Soap.h"

#import "SDZUser.h"

/* Implementation of the service */

@implementation SDZUserService

- (id) init
{
    if(self = [super init])
    {
        self.serviceUrl = @"http://192.168.3.2:9001/idc/services/UserService";
        self.namespace = @"http://soap.user/";
        self.headers = nil;
        self.logging = NO;
    }
    return self;
}

- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
    if(self = [super initWithUsername:username andPassword:password]) {
    }
    return self;
}

+ (SDZUserService*) service {
    return [SDZUserService serviceWithUsername:nil andPassword:nil];
}

+ (SDZUserService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
    return [[SDZUserService alloc] initWithUsername:username andPassword:password];
}


/* Returns id.  */
- (SoapRequest*) logout: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId
{
    return [self logout: handler action: nil sessionId: sessionId];
}

- (SoapRequest*) logout: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    NSString* _envelope = [Soap createEnvelope: @"logout" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
    [_request send];
    return _request;
}

/* Returns BOOL.  */
- (SoapRequest*) validateCode: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId mobileCode: (NSString*) mobileCode
{
    return [self validateCode: handler action: nil sessionId: sessionId mobileCode: mobileCode];
}

- (SoapRequest*) validateCode: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId mobileCode: (NSString*) mobileCode
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: mobileCode forName: @"mobileCode"]];
    NSString* _envelope = [Soap createEnvelope: @"validateCode" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
    [_request send];
    return _request;
}

/* Returns NSString*.  */
- (SoapRequest*) createSession: (id <SoapDelegate>) handler
{
    return [self createSession: handler action: nil];
}

- (SoapRequest*) createSession: (id) _target action: (SEL) _action
{
    NSMutableArray* _params = [NSMutableArray array];
    
    NSString* _envelope = [Soap createEnvelope: @"createSession" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
    [_request send];
    return _request;
}

/* Returns BOOL.  */
- (SoapRequest*) findNickNameIsUsed: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId userId: (NSString*) userId nickName: (NSString*) nickName
{
    return [self findNickNameIsUsed: handler action: nil sessionId: sessionId userId: userId nickName: nickName];
}

- (SoapRequest*) findNickNameIsUsed: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId userId: (NSString*) userId nickName: (NSString*) nickName
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: userId forName: @"userId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: nickName forName: @"nickName"]];
    NSString* _envelope = [Soap createEnvelope: @"findNickNameIsUsed" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
    [_request send];
    return _request;
}

/* Returns BOOL.  */
- (SoapRequest*) sendMobileValidateCode: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId mobile: (NSString*) mobile
{
    return [self sendMobileValidateCode: handler action: nil sessionId: sessionId mobile: mobile];
}

- (SoapRequest*) sendMobileValidateCode: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId mobile: (NSString*) mobile
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: mobile forName: @"mobile"]];
    NSString* _envelope = [Soap createEnvelope: @"sendMobileValidateCode" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
    [_request send];
    return _request;
}

/* Returns SDZUser*.  */
- (SoapRequest*) userLogin: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId mobile: (NSString*) mobile password: (NSString*) password
{
    return [self userLogin: handler action: nil sessionId: sessionId mobile: mobile password: password];
}

- (SoapRequest*) userLogin: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId mobile: (NSString*) mobile password: (NSString*) password
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: mobile forName: @"mobile"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"]];
    NSString* _envelope = [Soap createEnvelope: @"userLogin" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [SDZUser alloc]];
    [_request send];
    return _request;
}

/* Returns id.  */
- (SoapRequest*) setLanguage: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId language: (NSString*) language country: (NSString*) country
{
    return [self setLanguage: handler action: nil sessionId: sessionId language: language country: country];
}

- (SoapRequest*) setLanguage: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId language: (NSString*) language country: (NSString*) country
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: language forName: @"language"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: country forName: @"country"]];
    NSString* _envelope = [Soap createEnvelope: @"setLanguage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
    [_request send];
    return _request;
}

/* Returns BOOL.  */
- (SoapRequest*) saveRegisterUser: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId nickName: (NSString*) nickName mobile: (NSString*) mobile password: (NSString*) password identityNo: (NSString*) identityNo
{
    return [self saveRegisterUser: handler action: nil sessionId: sessionId nickName: nickName mobile: mobile password: password identityNo: identityNo];
}

- (SoapRequest*) saveRegisterUser: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId nickName: (NSString*) nickName mobile: (NSString*) mobile password: (NSString*) password identityNo: (NSString*) identityNo
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: nickName forName: @"nickName"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: mobile forName: @"mobile"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: identityNo forName: @"identityNo"]];
    NSString* _envelope = [Soap createEnvelope: @"saveRegisterUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
    [_request send];
    return _request;
}

/* Returns BOOL.  */
- (SoapRequest*) findMobileIsUsed: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId userId: (NSString*) userId mobile: (NSString*) mobile
{
    return [self findMobileIsUsed: handler action: nil sessionId: sessionId userId: userId mobile: mobile];
}

- (SoapRequest*) findMobileIsUsed: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId userId: (NSString*) userId mobile: (NSString*) mobile
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: userId forName: @"userId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: mobile forName: @"mobile"]];
    NSString* _envelope = [Soap createEnvelope: @"findMobileIsUsed" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
    [_request send];
    return _request;
}

/* Returns id.  */
- (SoapRequest*) noOperation: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId
{
    return [self noOperation: handler action: nil sessionId: sessionId];
}

- (SoapRequest*) noOperation: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    NSString* _envelope = [Soap createEnvelope: @"noOperation" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: nil];
    [_request send];
    return _request;
}

/* Returns BOOL.  */
- (SoapRequest*) updateUser: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId userId: (NSString*) userId nickName: (NSString*) nickName mobile: (NSString*) mobile identityNo: (NSString*) identityNo password: (NSString*) password
{
    return [self updateUser: handler action: nil sessionId: sessionId userId: userId nickName: nickName mobile: mobile identityNo: identityNo password: password];
}

- (SoapRequest*) updateUser: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId userId: (NSString*) userId nickName: (NSString*) nickName mobile: (NSString*) mobile identityNo: (NSString*) identityNo password: (NSString*) password
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: userId forName: @"userId"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: nickName forName: @"nickName"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: mobile forName: @"mobile"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: identityNo forName: @"identityNo"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"]];
    NSString* _envelope = [Soap createEnvelope: @"updateUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
    [_request send];
    return _request;
}

/* Returns SDZUser*.  */
- (SoapRequest*) refreshUser: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId
{
    return [self refreshUser: handler action: nil sessionId: sessionId];
}

- (SoapRequest*) refreshUser: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"]];
    NSString* _envelope = [Soap createEnvelope: @"refreshUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [SDZUser alloc]];
    [_request send];
    return _request;
}


@end
