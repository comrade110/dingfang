/*
	SDZUser.h
	The implementation of properties and methods for the SDZUser object.
	Generated by SudzC.com
*/
#import "SDZUser.h"

@implementation SDZUser
	@synthesize grade = _grade;
	@synthesize _id = __id;
	@synthesize identityNo = _identityNo;
	@synthesize lastLoginTime = _lastLoginTime;
	@synthesize mobile = _mobile;
	@synthesize money = _money;
	@synthesize nickName = _nickName;
	@synthesize password = _password;
	@synthesize score = _score;
	@synthesize totalMoney = _totalMoney;
	@synthesize totalScore = _totalScore;

	- (id) init
	{
		if(self = [super init])
		{
			self.identityNo = nil;
			self.lastLoginTime = nil;
			self.mobile = nil;
			self.nickName = nil;
			self.password = nil;

		}
		return self;
	}

	+ (SDZUser*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZUser*)[[SDZUser alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.grade = [[Soap getNodeValue: node withName: @"grade"] intValue];
			self._id = [[Soap getNodeValue: node withName: @"id"] longLongValue];
			self.identityNo = [Soap getNodeValue: node withName: @"identityNo"];
			self.lastLoginTime = [Soap getNodeValue: node withName: @"lastLoginTime"];
			self.mobile = [Soap getNodeValue: node withName: @"mobile"];
			self.money = [[Soap getNodeValue: node withName: @"money"] doubleValue];
			self.nickName = [Soap getNodeValue: node withName: @"nickName"];
			self.password = [Soap getNodeValue: node withName: @"password"];
			self.score = [[Soap getNodeValue: node withName: @"score"] doubleValue];
			self.totalMoney = [[Soap getNodeValue: node withName: @"totalMoney"] doubleValue];
			self.totalScore = [[Soap getNodeValue: node withName: @"totalScore"] doubleValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"User"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<grade>%@</grade>", [NSString stringWithFormat: @"%i", self.grade]];
		[s appendFormat: @"<id>%@</id>", [NSString stringWithFormat: @"%ld", self._id]];
		if (self.identityNo != nil) [s appendFormat: @"<identityNo>%@</identityNo>", [[self.identityNo stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.lastLoginTime != nil) [s appendFormat: @"<lastLoginTime>%@</lastLoginTime>", [[self.lastLoginTime stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.mobile != nil) [s appendFormat: @"<mobile>%@</mobile>", [[self.mobile stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<money>%@</money>", [NSString stringWithFormat: @"%f", self.money]];
		if (self.nickName != nil) [s appendFormat: @"<nickName>%@</nickName>", [[self.nickName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.password != nil) [s appendFormat: @"<password>%@</password>", [[self.password stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<score>%@</score>", [NSString stringWithFormat: @"%f", self.score]];
		[s appendFormat: @"<totalMoney>%@</totalMoney>", [NSString stringWithFormat: @"%f", self.totalMoney]];
		[s appendFormat: @"<totalScore>%@</totalScore>", [NSString stringWithFormat: @"%f", self.totalScore]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZUser class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
